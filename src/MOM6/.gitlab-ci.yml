stages:
  - merge+setup
  - builds
  - run
  - tests
  - cleanup

# Merges MOM6 with dev/gfdl. Changes directory to test directory, if it exists.
before_script:
  - MOM6_SRC=$CI_PROJECT_DIR
  - echo Cache directory set to ${CACHE_DIR:=/lustre/f2/scratch/oar.gfdl.ogrp-account/runner/cache/}
  - git pull --no-edit https://github.com/NOAA-GFDL/MOM6.git dev/gfdl && git submodule init && git submodule update
  - pwd ; ls

# Tests that merge with dev/gfdl works.
merge:
  stage: merge+setup
  tags:
    - ncrc4
  script:
    - pwd ; ls
    - git pull --no-edit https://github.com/NOAA-GFDL/MOM6.git dev/gfdl

# Clones regression repo, if necessary, pulls latest of everything, and sets up working space
setup:
  stage: merge+setup
  tags:
    - ncrc4
  script:
    - pwd ; ls
    # Clone regressions directory
    - git clone --recursive http://gitlab.gfdl.noaa.gov/ogrp/Gaea-stats-MOM6-examples.git tests && cd tests
    # Install / update testing scripts
    - git clone https://github.com/adcroft/MRS.git MRS
    # Update MOM6-examples and submodules
    - (cd MOM6-examples && git checkout . && git checkout dev/gfdl && git pull && git submodule init && git submodule update)
    - (cd MOM6-examples/src/MOM6 && git submodule update)
    - test -d MOM6-examples/src/LM3 || make -f MRS/Makefile.clone clone_gfdl -s
    - make -f MRS/Makefile.clone MOM6-examples/.datasets -s
    - env > gitlab_session.log
    # Cache everything under tests to unpack for each subsequent stage
    - cd ../ ; time tar zcf $CACHE_DIR/tests_$CI_PIPELINE_ID.tgz tests

# Compiles
gnu:repro:
  stage: builds
  tags:
    - ncrc4
  script:
    - time tar zxf $CACHE_DIR/tests_$CI_PIPELINE_ID.tgz && cd tests
    - time make -f MRS/Makefile.build MOM6_SRC=../ build_gnu -s -j
    - time make -f MRS/Makefile.build MOM6_SRC=../ static_gnu -s -j
    - time tar zvcf $CACHE_DIR/build-gnu-repro-$CI_PIPELINE_ID.tgz `find build/gnu -name MOM6`

gnu:ocean-only-nolibs:
  stage: builds
  tags:
    - ncrc4
  script:
    - time tar zxf $CACHE_DIR/tests_$CI_PIPELINE_ID.tgz && cd tests
    - make -f MRS/Makefile.build build/gnu/env && cd build/gnu
    # mkdir -p build/gnu/repro/symmetric_dynamic/ocean_only && cd build/gnu/repro/symmetric_dynamic/ocean_only
    - ../../MOM6-examples/src/mkmf/bin/list_paths -l ../../../config_src/{solo_driver,dynamic_symmetric,ext*} ../../../src ../../MOM6-examples/src/FMS
    - sed -i '/FMS\/.*\/test_/d' path_names
    - ../../MOM6-examples/src/mkmf/bin/mkmf -t ../../MOM6-examples/src/mkmf/templates/ncrc-gnu.mk -p MOM6 -c"-Duse_libMPI -Duse_netCDF" path_names
    - time (source ./env ; make NETCDF=3 REPRO=1 MOM6 -s -j)

gnu:ice-ocean-nolibs:
  stage: builds
  tags:
    - ncrc4
  script:
    - time tar zxf $CACHE_DIR/tests_$CI_PIPELINE_ID.tgz && cd tests
    - make -f MRS/Makefile.build build/gnu/env && cd build/gnu
    # mkdir -p build/gnu/repro/symmetric_dynamic/ocean_only && cd build/gnu/repro/symmetric_dynamic/ocean_only
    - ../../MOM6-examples/src/mkmf/bin/list_paths -l ../../../config_src/{coupled_driver,dynamic,ext*} ../../../src ../../MOM6-examples/src/{FMS,coupler,SIS2,icebergs,ice_param,land_null,atmos_null}
    - sed -i '/FMS\/.*\/test_/d' path_names
    - ../../MOM6-examples/src/mkmf/bin/mkmf -t ../../MOM6-examples/src/mkmf/templates/ncrc-gnu.mk -p MOM6 -c"-Duse_libMPI -Duse_netCDF -D_USE_LEGACY_LAND_ -Duse_AM3_physics" path_names
    - time (source ./env ; make NETCDF=3 REPRO=1 MOM6 -s -j)

intel:repro:
  stage: builds
  tags:
    - ncrc4
  script:
    - time tar zxf $CACHE_DIR/tests_$CI_PIPELINE_ID.tgz && cd tests
    - make -f MRS/Makefile.build MOM6_SRC=../ build_intel -s -j
    - time tar zvcf $CACHE_DIR/build-intel-repro-$CI_PIPELINE_ID.tgz `find build/intel -name MOM6`

pgi:repro:
  stage: builds
  tags:
    - ncrc4
  script:
    - time tar zxf $CACHE_DIR/tests_$CI_PIPELINE_ID.tgz && cd tests
    - make -f MRS/Makefile.build MOM6_SRC=../ build_pgi -s -j
    - time tar zvcf $CACHE_DIR/build-pgi-repro-$CI_PIPELINE_ID.tgz `find build/pgi -name MOM6`

gnu:debug:
  stage: builds
  tags:
    - ncrc4
  script:
    - time tar zxf $CACHE_DIR/tests_$CI_PIPELINE_ID.tgz && cd tests
    - make -f MRS/Makefile.build MOM6_SRC=../ debug_gnu -s -j
    - time tar zvcf $CACHE_DIR/build-gnu-debug-$CI_PIPELINE_ID.tgz `find build/gnu -name MOM6`

# Runs
run:
  stage: run
  tags:
    - ncrc4
  script:
    - time tar zxf $CACHE_DIR/tests_$CI_PIPELINE_ID.tgz && cd tests
    - time tar zxf $CACHE_DIR/build-gnu-repro-$CI_PIPELINE_ID.tgz
    - time tar zxf $CACHE_DIR/build-intel-repro-$CI_PIPELINE_ID.tgz
    - time tar zxf $CACHE_DIR/build-pgi-repro-$CI_PIPELINE_ID.tgz
    # time tar zxf $CACHE_DIR/build-gnu-debug-$CI_PIPELINE_ID.tgz
    - (echo '#!/bin/tcsh';echo 'make -f MRS/Makefile.tests all') > job.sh
    - sbatch --clusters=c3,c4 --nodes=29 --time=0:34:00 --account=gfdl_o --qos=debug --job-name=mom6_regressions --output=log.$CI_PIPELINE_ID --wait job.sh
    - cat log.$CI_PIPELINE_ID
    - test -f restart_results_gnu.tar.gz
    - time tar zvcf $CACHE_DIR/results-$CI_PIPELINE_ID.tgz *.tar.gz

# Tests
gnu:non-symmetric:
  stage: tests
  tags:
    - ncrc4
  script:
    - time tar zxf $CACHE_DIR/tests_$CI_PIPELINE_ID.tgz && cd tests
    - time tar zxf $CACHE_DIR/results-$CI_PIPELINE_ID.tgz
    - make -f MRS/Makefile.tests gnu_non_symmetric

intel:non-symmetric:
  stage: tests
  tags:
    - ncrc4
  script:
    - time tar zxf $CACHE_DIR/tests_$CI_PIPELINE_ID.tgz && cd tests
    - time tar zxf $CACHE_DIR/results-$CI_PIPELINE_ID.tgz
    - make -f MRS/Makefile.tests intel_non_symmetric

pgi:non-symmetric:
  stage: tests
  tags:
    - ncrc4
  script:
    - time tar zxf $CACHE_DIR/tests_$CI_PIPELINE_ID.tgz && cd tests
    - time tar zxf $CACHE_DIR/results-$CI_PIPELINE_ID.tgz
    - make -f MRS/Makefile.tests pgi_non_symmetric

gnu:symmetric:
  stage: tests
  tags:
    - ncrc4
  script:
    - time tar zxf $CACHE_DIR/tests_$CI_PIPELINE_ID.tgz && cd tests
    - time tar zxf $CACHE_DIR/results-$CI_PIPELINE_ID.tgz
    - make -f MRS/Makefile.tests gnu_symmetric

intel:symmetric:
  stage: tests
  tags:
    - ncrc4
  script:
    - time tar zxf $CACHE_DIR/tests_$CI_PIPELINE_ID.tgz && cd tests
    - time tar zxf $CACHE_DIR/results-$CI_PIPELINE_ID.tgz
    - make -f MRS/Makefile.tests intel_symmetric

pgi:symmetric:
  stage: tests
  tags:
    - ncrc4
  script:
    - time tar zxf $CACHE_DIR/tests_$CI_PIPELINE_ID.tgz && cd tests
    - time tar zxf $CACHE_DIR/results-$CI_PIPELINE_ID.tgz
    - make -f MRS/Makefile.tests pgi_symmetric

gnu:layout:
  stage: tests
  tags:
    - ncrc4
  script:
    - time tar zxf $CACHE_DIR/tests_$CI_PIPELINE_ID.tgz && cd tests
    - time tar zxf $CACHE_DIR/results-$CI_PIPELINE_ID.tgz
    - make -f MRS/Makefile.tests gnu_layout

intel:layout:
  stage: tests
  tags:
    - ncrc4
  script:
    - time tar zxf $CACHE_DIR/tests_$CI_PIPELINE_ID.tgz && cd tests
    - time tar zxf $CACHE_DIR/results-$CI_PIPELINE_ID.tgz
    - make -f MRS/Makefile.tests intel_layout

pgi:layout:
  stage: tests
  tags:
    - ncrc4
  script:
    - time tar zxf $CACHE_DIR/tests_$CI_PIPELINE_ID.tgz && cd tests
    - time tar zxf $CACHE_DIR/results-$CI_PIPELINE_ID.tgz
    - make -f MRS/Makefile.tests pgi_layout

gnu:static:
  stage: tests
  tags:
    - ncrc4
  script:
    - time tar zxf $CACHE_DIR/tests_$CI_PIPELINE_ID.tgz && cd tests
    - time tar zxf $CACHE_DIR/results-$CI_PIPELINE_ID.tgz
    - make -f MRS/Makefile.tests gnu_static

gnu:restart:
  stage: tests
  tags:
    - ncrc4
  script:
    - time tar zxf $CACHE_DIR/tests_$CI_PIPELINE_ID.tgz && cd tests
    - time tar zxf $CACHE_DIR/results-$CI_PIPELINE_ID.tgz
    - make -f MRS/Makefile.tests gnu_check_restarts

gnu:params:
  stage: tests
  tags:
    - ncrc4
  script:
    - time tar zxf $CACHE_DIR/tests_$CI_PIPELINE_ID.tgz && cd tests
    - time tar zxf $CACHE_DIR/results-$CI_PIPELINE_ID.tgz
    - make -f MRS/Makefile.tests params_gnu_symmetric
  allow_failure: true

cleanup:
  stage: cleanup
  tags:
    - ncrc4
  script:
    - rm $CACHE_DIR/*$CI_PIPELINE_ID.tgz
